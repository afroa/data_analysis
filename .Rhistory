write_csv(barber_states_percent, "data/barber_all_state_percent.csv")
barber_states_percent <- all_barber_stats %>%
mutate(
percent = (total_undisbursed/total_loans)*100
) %>%
arrange(desc(percent)) %>%
select(total_loans, percent, state)
head(15)
write_csv(barber_states_percent, "data/barber_all_state_percent.csv")
barber_states_percent <- all_barber_stats %>%
mutate(
percent = (total_undisbursed/total_loans)*100
) %>%
arrange(desc(percent)) %>%
select(state, total_loans, percent)
head(15)
write_csv(barber_states_percent, "data/final_barber.csv")
barber_states_percent <- all_barber_stats %>%
mutate(
percent = (total_undisbursed/total_loans)*100
) %>%
arrange(desc(percent)) %>%
select(state, total_loans, percent)
head(15)
barber_states_percent <- all_barber_stats %>%
mutate(
percent = (total_undisbursed/total_loans)*100
) %>%
arrange(desc(percent)) %>%
select(state, total_loans, percent) %>%
head(15)
write_csv(barber_states_percent, "data/final_barber.csv")
barber_states_percent <- all_barber_stats %>%
mutate(
percent = (total_undisbursed/total_loans)*100
) %>%
arrange(desc(percent)) %>%
select(state, total_loans, percent)
View(barber_states_percent)
barber_states_percent <- all_barber_stats %>%
mutate(
percent = (total_undisbursed/total_loans)*100
) %>%
arrange(desc(percent)) %>%
select(state, total_loans, percent) %>%
head(30)
write_csv(barber_states_percent, "data/final_barber.csv")
kabbage_counties <- read_csv("data/kabbage_counties.csv")
all_counties <- read.csv("data/all_counties.csv")
View(all_counties)
View(kabbage_counties)
joined_kabbage <- kabbage_counties %>%
left_join(all_counties, by=c('project_county_name'))
View(joined_kabbage)
joined_kabbage <- kabbage_counties %>%
left_join(all_counties, by=c('project_county_name', 'project_state'))
View(joined_kabbage)
joined_kabbage <- kabbage_counties %>%
left_join(all_counties, by=c('project_county_name', 'project_state')) %>%
rename(total_kabbage_loans=count.x, total_county_loans=count.y)
joined_kabbage <- kabbage_counties %>%
left_join(all_counties, by=c('project_county_name', 'project_state')) %>%
rename(total_kabbage_loans=total.x, total_county_loans=total.y)
View(joined_kabbage)
joined_kabbage <- kabbage_counties %>%
left_join(all_counties, by=c('project_county_name', 'project_state')) %>%
rename(total_kabbage_loans=total.x, total_county_loans=total.y) %>%
mutate(
percent = (total_kabbage_loans/total_county_loans)*100
) %>%
arrange(desc(percent))
View(joined_kabbage)
county_fips <- read.csv("data/county_fips.csv")
View(county_fips)
fips_join <- joined_kabbage %>%
left_join(county_fips, by=c('match_county' = 'project_county_name'))
fips_join <- joined_kabbage %>%
left_join(county_fips, by=c('project_county_name' = 'match_county'))
View(fips_join)
fips_join <- joined_kabbage %>%
left_join(county_fips, by=c('project_county_name' = 'match_county'))
View(fips_join)
fips_join <- joined_kabbage %>%
left_join(county_fips, by=c('project_county_name' = 'match_county', 'state' = 'project_county_state'))
fips_join <- joined_kabbage %>%
left_join(county_fips, by=c('project_county_name' = 'match_county', 'project_county_state' = 'state'))
fips_join <- joined_kabbage %>%
left_join(county_fips, by=c('project_county_name' = 'match_county' & 'project_county_state' = 'state'))
fips_join <- joined_kabbage %>%
left_join(county_fips, by=c('project_county_name' = 'match_county', 'project_county_state' = 'state'))
knitr::opts_chunk$set(echo = TRUE)
md_counties_with_fips <- md_counties %>%
left_join(md_fips, by=c('project_county_name'='match_county'))
fips_join <- joined_kabbage %>%
left_join(county_fips, by=c('project_county_name' = 'match_county'))
fips_join <- joined_kabbage %>%
left_join(county_fips, by=c('project_county_name' = 'match_county'))
write_csv(fips_join, "data/counties_with_fips")
fips_join <- joined_kabbage %>%
left_join(county_fips, by=c('project_county_name' = 'match_county'))
write_csv(fips_join, "data/counties_with_fips.csv")
View(fips_join)
setwd("~/Documents/GitHub/data_analysis")
knitr::opts_chunk$set(echo = TRUE)
library(tidycensus)
library(tidyverse)
library(janitor)
library(dplyr)
#Reading the data into a new dataframe
md_median_household_income <- read.csv("data/md_median_household_income.csv")
# Cleaning the data
clean_rows <- md_median_household_income %>%
filter(Data == "Income") %>%
clean_names() %>%
t()
flipped_rows <- as.data.frame(clean_rows)
flipped_rows %>%
rename(flipped_rows, V1 = "2010")
View(md_median_household_income)
acs2019 <- load_variables(2019, "acs5",cache = TRUE)
owner_occupied_md <- get_acs(
geography = "county",
variables = c(owneroccupied = "B25008_002"),
state = "MD",
year = 2019
)
renter_occupied_md <- get_acs(
geography = "county",
variables = c(renter_occupied = "B25008_003"),
state = "MD",
year = 2019
)
all_housing_md <- get_acs(
geography = "county",
variables = c(total_housing = "B25008_001"),
state = "MD",
year = 2019
)
all_combined_housing <- all_housing_md %>% inner_join(renter_occupied_md, by=c("GEOID", "NAME")) %>%
rename(total_housing_2019=estimate.x, total_renter_2019=estimate.y) %>%
select(NAME, total_housing_2019, total_renter_2019)
final_combined_housing <- all_combined_housing %>% inner_join(owner_occupied_md, by=c("NAME")) %>%
rename(total_owner_2019=estimate) %>%
select(NAME, total_housing_2019, total_renter_2019, total_owner_2019) %>%
mutate(percent_renter_2019 = (total_renter_2019/total_housing_2019)*100) %>%
mutate(percent_owner_2019 = (total_owner_2019/total_housing_2019)*100)
final_combined_housing %>%
arrange(desc(percent_owner_2019))
final_combined_housing %>%
arrange(desc(percent_renter_2019))
all_housing_md <- get_acs(
geography = "county",
variables = c(total_housing = "B25008_001"),
state = "MD",
year = 2019
)
acs2010 <- load_variables(2010, "acs5",cache = TRUE)
View(acs2010)
race_data <- get_acs(
geography = "county",
variables = c(race = "B02001_001"),
state = "MD",
year = 2010
)
View(race_data)
acs2010 <- load_variables(2010, "acs5",cache = TRUE) %>%
filter(name >= "B02001_002", name <= "B02001_010")
View(acs2010)
acs2010 <- load_variables(2019, "acs5",cache = TRUE) %>%
filter(name >= "B02001_002", name <= "B02001_010")
View(acs2010)
white_data <- get_acs(
geography = "county",
variables = c(race = "B02001_002"),
state = "MD",
year = 2019
)
View(white_data)
black_data <-
get_acs(
geography = "county",
variables = c(race = "B02001_003"),
state = "MD",
year = 2019
)
View(black_data)
native_data <- get_acs(
geography = "county",
variables = c(race = "B02001_004"),
state = "MD",
year = 2019
)
View(native_data)
asian_data <- get_acs(
geography = "county",
variables = c(race = "B02001_005"),
state = "MD",
year = 2019
)
asian_data <- get_acs(
geography = "county",
variables = c(race = "B02001_005"),
state = "MD",
year = 2019
)
pacific_islander_data <- get_acs(
geography = "county",
variables = c(race = "B02001_006"),
state = "MD",
year = 2019
)
white_data <- get_acs(
geography = "county",
variables = c(race = "B02001_002"),
state = "MD",
year = 2019
)
black_data <- get_acs(
geography = "county",
variables = c(race = "B02001_003"),
state = "MD",
year = 2019
)
native_data <- get_acs(
geography = "county",
variables = c(race = "B02001_004"),
state = "MD",
year = 2019
)
asian_data <- get_acs(
geography = "county",
variables = c(race = "B02001_005"),
state = "MD",
year = 2019
)
asian_data <- get_acs(
geography = "county",
variables = c(race = "B02001_005"),
state = "MD",
year = 2019
)
pacific_islander_data <- get_acs(
geography = "county",
variables = c(race = "B02001_006"),
state = "MD",
year = 2019
)
one_other_race <- get_acs(
geography = "county",
variables = c(race = "B02001_007"),
state = "MD",
year = 2019
)
two_or_more_races <- get_acs(
geography = "county",
variables = c(race = "B02001_008"),
state = "MD",
year = 2019
)
two_races_including_some_other_race <- get_acs(
geography = "county",
variables = c(race = "B02001_009"),
state = "MD",
year = 2019
)
two_races_exluding_or_three_races <- get_acs(
geography = "county",
variables = c(race = "B02001_010"),
state = "MD",
year = 2019
)
combined_race_1 <- white_data %>%
inner_join(black_data, by=c("GEOID", "NAME"))
View(combined_race_1)
combined_race_1 <- white_data %>%
inner_join(black_data, by=c("GEOID", "NAME")) %>%
rename(black_population=estimate.y, white_population=estimate.x)
View(combined_race_1)
combined_race_1 <- white_data %>%
inner_join(black_data, by=c("GEOID", "NAME")) %>%
rename(black_population=estimate.y, white_population=estimate.x) %>%
select(NAME, black_population, white_population, geometry)
combined_race_1 <- white_data %>%
inner_join(black_data, by=c("GEOID", "NAME")) %>%
rename(black_population=estimate.y, white_population=estimate.x) %>%
select(NAME, black_population, white_population)
View(combined_race_1)
View(combined_race_1)
white_data <- get_acs(
geography = "county",
variables = c(race = "B02001_002"),
state = "MD",
year = 2019
)
black_data <- get_acs(
geography = "county",
variables = c(race = "B02001_003"),
state = "MD",
year = 2019
)
native_data <- get_acs(
geography = "county",
variables = c(race = "B02001_004"),
state = "MD",
year = 2019
)
asian_data <- get_acs(
geography = "county",
variables = c(race = "B02001_005"),
state = "MD",
year = 2019
)
pacific_islander_data <- get_acs(
geography = "county",
variables = c(race = "B02001_006"),
state = "MD",
year = 2019
)
one_other_race <- get_acs(
geography = "county",
variables = c(race = "B02001_007"),
state = "MD",
year = 2019
)
two_or_more_races <- get_acs(
geography = "county",
variables = c(race = "B02001_008"),
state = "MD",
year = 2019
)
two_races_including_some_other_race <- get_acs(
geography = "county",
variables = c(race = "B02001_009"),
state = "MD",
year = 2019
)
two_races_exluding_or_three_races <- get_acs(
geography = "county",
variables = c(race = "B02001_010"),
state = "MD",
year = 2019
)
combined_race_2 <- combined_race_1 %>%
inner_join(native_data, by=c("GEOID", "NAME")) %>%
rename(native_population=estimate)
View(native_data)
combined_race_1 <- white_data %>%
inner_join(black_data, by=c("GEOID", "NAME")) %>%
rename(black_population=estimate.y, white_population=estimate.x) %>%
select(GEOID, NAME, black_population, white_population)
combined_race_2 <- combined_race_1 %>%
inner_join(native_data, by=c("GEOID", "NAME")) %>%
rename(native_population=estimate)
View(combined_race_2)
combined_race_3 <- combined_race_2 %>%
inner_join(asian_data, by=c("GEOID", "NAME")) %>%
rename(asian_population=estimate)
View(combined_race_3)
combined_race_4 <- combined_race_3 %>%
inner_join(pacific_islander_data, by=c("GEOID", "NAME")) %>%
rename(pacific_island_population=estimate)
combined_race_5 <- combined_race_4 %>%
inner_join(one_other_race, by=c("GEOID", "NAME")) %>%
rename(one_other_race=estimate)
combined_race_6 <- combined_race_5 %>%
inner_join(two_or_more_races, by=c("GEOID", "NAME")) %>%
rename(two_or_more_races=estimate)
combined_race_7 <- combined_race_6 %>%
inner_join(two_races_including_some_other_race, by=c("GEOID", "NAME")) %>%
rename(two_races_including_some_other_race=estimate)
combined_race_8 <- combined_race_7 %>%
inner_join(two_races_exluding_or_three_races, by=c("GEOID", "NAME")) %>%
rename(two_races_exluding_or_three_races=estimate)
final_racial_demographics <- combined_race_7 %>%
inner_join(two_races_exluding_or_three_races, by=c("GEOID", "NAME")) %>%
rename(two_races_exluding_or_three_races=estimate)
final_racial_demographics <- combined_race_7 %>%
inner_join(two_races_exluding_or_three_races, by=c("GEOID", "NAME")) %>%
rename(two_races_exluding_or_three_races=estimate) %>%
select(GEOID, NAME, black_population, white_population, native_population, asian_population, pacific_island_population, one_other_race, two_or_more_races, two_races_including_some_other_race)
View(final_racial_demographics)
View(final_combined_housing)
combined_race_and_housing <- final_racial_demographics %>%
inner_join(final_combined_housing, by=c("NAME"))
View(combined_race_and_housing)
prince_georges_race <- combined_race_and_housing %>%
filter(NAME == "Prince George's County, Maryland")
prince_georges_race_and_housing <- decade_pg_housing %>%
inner_join(prince_georges_race, by=c("NAME"))
acs2019 <- load_variables(2019, "acs5",cache = TRUE)
owner_occupied_md <- get_acs(
geography = "county",
variables = c(owneroccupied = "B25008_002"),
state = "MD",
year = 2019
)
renter_occupied_md <- get_acs(
geography = "county",
variables = c(renter_occupied = "B25008_003"),
state = "MD",
year = 2019
)
all_housing_md <- get_acs(
geography = "county",
variables = c(total_housing = "B25008_001"),
state = "MD",
year = 2019
)
all_combined_housing <- all_housing_md %>% inner_join(renter_occupied_md, by=c("GEOID", "NAME")) %>%
rename(total_housing_2019=estimate.x, total_renter_2019=estimate.y) %>%
select(NAME, total_housing_2019, total_renter_2019)
final_combined_housing <- all_combined_housing %>% inner_join(owner_occupied_md, by=c("NAME")) %>%
rename(total_owner_2019=estimate) %>%
select(NAME, total_housing_2019, total_renter_2019, total_owner_2019) %>%
mutate(percent_renter_2019 = (total_renter_2019/total_housing_2019)*100) %>%
mutate(percent_owner_2019 = (total_owner_2019/total_housing_2019)*100)
final_combined_housing %>%
arrange(desc(percent_owner_2019))
final_combined_housing %>%
arrange(desc(percent_renter_2019))
acs2010 <- load_variables(2010, "acs5",cache = TRUE)
owner_occupied_md_2010 <- get_acs(
geography = "county",
variables = c(owneroccupied = "B25008_002"),
state = "MD",
year = 2010
)
renter_occupied_md_2010 <- get_acs(
geography = "county",
variables = c(renter_occupied = "B25008_003"),
state = "MD",
year = 2010
)
all_housing_md_2010 <- get_acs(
geography = "county",
variables = c(total_housing = "B25008_001"),
state = "MD",
year = 2010
)
decade_housing <- final_combined_housing %>% inner_join(renter_occupied_md_2010, by=c("NAME")) %>%
rename(total_renter_2010=estimate)
combined_owners <- decade_housing %>% inner_join(owner_occupied_md_2010, by=c("NAME")) %>%
rename(total_owner_2010=estimate)
decade_total_housing_combined <- combined_owners %>% inner_join(all_housing_md_2010, by=c("NAME")) %>%
rename(total_housing_2010=estimate) %>%
select(NAME, total_housing_2010, total_renter_2010, total_owner_2010, total_housing_2019, total_renter_2019, total_owner_2019)
decade_pg_housing <- decade_total_housing_combined %>%
filter(NAME == "Prince George's County, Maryland") %>%
mutate(percent_change_owner = ((total_owner_2019/total_owner_2010)-1)*100) %>%
mutate(percent_change_renter = ((total_renter_2019/total_renter_2010)-1)*100) %>%
mutate(percent_change_housing = ((total_housing_2019/total_housing_2010)-1)*100)
prince_georges_race_and_housing <- decade_pg_housing %>%
inner_join(prince_georges_race, by=c("NAME"))
View(prince_georges_race_and_housing)
View(decade_total_housing_combined)
View(decade_pg_housing)
prince_georges_race_and_housing <- decade_pg_housing %>%
inner_join(prince_georges_race, by=c("NAME")) %>%
select(GEOID, NAME, black_population, white_population, native_population, asian_population, pacific_island_population, one_other_race, two_or_more_races, two_races_including_some_other_race, total_housing_2019, total_renter_2019, total_owner_2019)
prince_georges_race_and_housing <- decade_pg_housing %>%
inner_join(prince_georges_race, by=c("NAME")) %>%
select(GEOID, NAME, black_population, white_population, native_population, asian_population, pacific_island_population, one_other_race, two_or_more_races, two_races_including_some_other_race, total_housing_2019.y, total_renter_2019.y, total_owner_2019.y)
View(prince_georges_race_and_housing)
prince_georges_race_and_housing <- decade_pg_housing %>%
inner_join(prince_georges_race, by=c("NAME")) %>%
select(GEOID, NAME, black_population, white_population, native_population, asian_population, pacific_island_population, one_other_race, two_or_more_races, two_races_including_some_other_race, total_housing_2019.y, total_renter_2019.y, total_owner_2019.y, percent_change_owner, percent_change_renter, percent_change_housing)
View(prince_georges_race_and_housing)
white_data_homeownership <- get_acs(
geography = "county",
variables = c(race = "B25003A_002"),
state = "MD",
year = 2019)
black_data_homeownership <- get_acs(
geography = "county",
variables = c(race = "B25003B_002"),
state = "MD",
year = 2019)
americanindian_alaskannative_data_homeownership <- get_acs(
geography = "county",
variables = c(race = "B25003C_002"),
state = "MD",
year = 2019)
asian_data_homeownership <- get_acs(
geography = "county",
variables = c(race = "B25003D_002"),
state = "MD",
year = 2019)
nativehawaiian_aapi_data_homeownership <- get_acs(
geography = "county",
variables = c(race = "B25003E_002"),
state = "MD",
year = 2019)
someohterracealone_data_homeownership <- get_acs(
geography = "county",
variables = c(race = "B25003F_002"),
state = "MD",
year = 2019)
twootherraces_data_homeownership <- get_acs(
geography = "county",
variables = c(race = "B25003G_002"),
state = "MD",
year = 2019)
whitealonenothispanicorlatino_data_homeownership <- get_acs(
geography = "county",
variables = c(race = "B25003H_002"),
state = "MD",
year = 2019)
hispanicorlatino_data_homeownership <- get_acs(
geography = "county",
variables = c(race = "B25003I_002"),
state = "MD",
year = 2019)
